name:  Build dav1

on:
  workflow_dispatch:
  push:
    branches:
      - dev_build_av1

jobs:
  BuildDavd:
    strategy:
      max-parallel: 3
      matrix:
        target:
          - abi: 'armeabi-v7a'
            arch: 'arm'
          - abi: 'arm64-v8a'
            arch: 'aarch64'
          - abi: 'x86'
            arch: 'x86'
          - abi: 'x86_64'
            arch: 'x86_64'  
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Checkout the code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned."

    #   - run: echo "Setting up JDK"
    #   - name: set up JDK 17
    #     uses: actions/setup-java@v4
    #     with:
    #       java-version: 17    
    #       distribution: 'oracle'
    #       cache: gradle
      - name: Install `deps` on Ubuntu
        shell: bash
        run: |
          sudo apt install ninja-build build-essential coreutils cmake tree -y
          echo "cpu core num is "
          nproc     
      - name: Setup meson
        run: pip install meson

      - uses: ilammy/setup-nasm@v1

      - name: show layouts (unix)
        shell: bash
        run: |
          tree -L 3 DroidMedia

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
            java-version: 17    
            distribution: 'temurin'
            cache: gradle    

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
            ndk-version: r25c
            add-to-path: false
      - run: echo "The workflow is now ready to test your code."
      - name: clone required dependencies , glm and jpeg-turbo
        working-directory: DroidMedia
        run: |
          chmod +x ./.buildscripts/ensure_third_party_deps.sh
          ./.buildscripts/ensure_third_party_deps.sh
        shell: bash      

      - name: Grant execute permission for bash scripts
        working-directory: DroidMedia
        run: chmod +x ./.buildscripts/dav1d_android.sh      

      - name: Build dav1d with the Android NDK
        working-directory: DroidMedia
        run:    |
            tree -L 4 ${{ steps.setup-ndk.outputs.ndk-path }}
            bash ./.buildscripts/dav1d_android.sh ${{ steps.setup-ndk.outputs.ndk-path }} ${{ matrix.target.abi }} ${{ matrix.target.arch }}
      
      - name: show layouts (unix)
        shell: bash
        run: |
          tree -L 5 DroidMedia/dav1d/build/${{ matrix.target.abi }}/_install

      - name: Build with Gradle maybe build with cmake
        working-directory: DroidMedia
        shell: bash
        run: |
          chmod +x gradlew
          ./gradlew assembleDebug

      - name: Zip
        shell: bash
        run: |
          mkdir -p dist
          ls -alSh 
          tar --directory DroidMedia/dav1d/build/${{ matrix.target.abi }}/_install/usr/local  --create --xz --verbose --file dist/libdav1d.tar.xz .
           
      - name: Upload_That_lib
        uses: actions/upload-artifact@v4
        with:
            name: libdav1d-${{ matrix.target.abi }}-${{ matrix.target.arch }}
            retention-days: 7
            path: dist