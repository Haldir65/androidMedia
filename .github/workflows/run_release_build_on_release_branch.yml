name: Build Release when we push to release , for testing purpose before shipment

# on:
#   push:
#     # Pattern matched against refs/tags
#     tags:        
#       - '*'           # Push events to every tag not containing /

on:
  workflow_dispatch:
  push:
    branches:
      - release

jobs:
  buildRelease:
    name: BuildRelease
    runs-on: ubuntu-latest
    env:
      builddir: DroidMedia/app/build/outputs/apk/release
    steps:
      - run: echo "Building Release APK."
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Checkout the code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned."
      - run: echo "Setting up JDK"
      - name: set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21    
          distribution: 'oracle'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4      
      - run: echo "The workflow is now ready to test your code."
      - name: clone required dependencies , glm and jpeg-turbo
        working-directory: DroidMedia
        run: |
          sudo apt update
          sudo apt install tree
          chmod +x ./.buildscripts/ensure_third_party_deps.sh
          ./.buildscripts/ensure_third_party_deps.sh
        shell: bash
      - name: Grant execute permission for gradlew
        working-directory: DroidMedia
        run: chmod +x gradlew
        # cache Gradle dependencies and wrapper to reduce build time
      # - name: Cache Gradle Wrapper
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.gradle/wrapper
      #     # working-directory: DroidMedia
      #     key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      # - name: Cache Gradle All Kinds of Dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.gradle/caches
      #     key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-caches-
      - run: echo "do not cache when we run release build"
      - name: Build Release
        working-directory: DroidMedia
        run: ./gradlew assembleRelease
      - run: echo "Build status report=${{ job.status }}."  

      - name: Generate hashes
        run: |
          tree -L 4 ${{ env.builddir }}
          for file in ${{ env.builddir }}/*; do
            if [ -d "$file" ]; then
              echo "this is an folder: $file"
            else
              sha256sum $file >> ${{ env.builddir }}/hashes.txt
            fi
          done

      - name: Upload_That_APK
        uses: actions/upload-artifact@v4
        with:
          name: myapk
          retention-days: 7
          path: |
            ${{ env.builddir }}/*.apk  
            ${{ env.builddir }}/hashes.txt 
   
      # - name: Create_Github_Release 
      #   id: create_new_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.run_number }}
      #     release_name: Release ${{ github.run_number }}
      #     body: |
      #       Changes in this Release
      #       - First Change
      #       - Second Change
      #       - Third Change
      #     draft: false
      #     prerelease: false
      # - name: Upload APK to release assets
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     upload_url: ${{ steps.create_new_release.outputs.upload_url }}
      #     asset_path: DroidMedia/app/build/outputs/apk/release/DroidMedia_1.0.0_arm64v8a.apk
      #     asset_name: DroidMedia_1.0.0_arm64v8a.apk
      #     asset_content_type: application/zip

