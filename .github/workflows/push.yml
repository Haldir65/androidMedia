name: Android Build upon push

on:
  push:
    branches:
      - master


jobs:
  build:
    name: BuildDebug
    if: "!contains(github.event.head_commit.message, 'Release')"
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Checkout the code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned."
      - run: echo "Setting up JDK"
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17    
          distribution: 'oracle'
          cache: gradle
      - run: echo "The workflow is now ready to test your code."
      - name: clone required dependencies , glm and jpeg-turbo
        working-directory: ./DroidMedia
        run: |
         chmod +x ./.buildscripts/ensure_third_party_deps.sh
         ./.buildscripts/ensure_third_party_deps.sh
        shell: bash
      - name: show all files
        working-directory: ./DroidMedia
        run: ls -al
      - name: Grant execute permission for gradlew
        working-directory: ./DroidMedia
        run: chmod +x gradlew
      - run: echo "Building Debug APK."
      - name: Build with Gradle
        working-directory: ./DroidMedia
        # run: ./gradlew build
        run: ./gradlew assembleDebug
      - run: echo "Build status report=${{ job.status }}."

  buildAll:
    name: BuildAllVariant
    if: "contains(github.event.head_commit.message, 'Release')"
    runs-on: ubuntu-latest
    steps:
      - run: echo "[release]The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "[release]This job is running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Checkout the code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned."
      - run: echo "Setting up JDK"
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17    
          distribution: 'oracle'
          cache: gradle
      - run: echo "The workflow is now ready to test your code."
      - name: clone required dependencies , glm and jpeg-turbo
        working-directory: ./DroidMedia
        run: |
          chmod +x ./.buildscripts/ensure_third_party_deps.sh
          ./.buildscripts/ensure_third_party_deps.sh
        shell: bash
      - name: show all files
        working-directory: ./DroidMedia
        run: ls -al
      - name: Grant execute permission for gradlew
        working-directory: ./DroidMedia
        run: chmod +x gradlew
      - run: echo "Building Debug APK."
        ## cache Gradle dependencies and wrapper to reduce build time
      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Build with Gradle
        working-directory: ./DroidMedia
        run: ./gradlew build
      - run: echo "Build status report=${{ job.status }}."    
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: ${{ github.workspace }}/DroidMedia/app/build/outputs/apk/release/
      - name: Create Github Release 
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
            - Third Change
          draft: false
          prerelease: false