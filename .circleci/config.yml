version: '2.1'
orbs:
  android: circleci/android@2.4.0
#   android: circleci/android@1.0.3
  # dt: datatheorem/mobile-secure-orb@1.0.0

executors:
  docker-amd64:
    docker:
      # - image: fabernovel/android:api-34-gcloud-ndk-snapshot
      - image: haldir65/android-build-env:ubuntu24-java21-ndk26-api34
    resource_class: large
  docker-aarch64:
    docker:
      - image: haldir65/android-build-env:ubuntu24-java21-ndk26-api34
    resource_class: arm.large
    
  linux-amd64:
    machine:
      image: android:default
    resource_class: large
  # linux-aarch64:
  #   machine:  
  #     image: android:default
  #   resource_class: arm.large  
  ## Job was rejected because resource class arm.large, image android:default is not a valid resource class





jobs:
  dockerbuild:
    # executor:
    #   name: android/android-machine
    #   resource-class: large
    #   tag: default
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    steps:
      - checkout

      # preseed packages so that apt-get won't prompt for user input
      - run:
          name: Install Dependency
          command: |
              echo "keyboard-configuration keyboard-configuration/layoutcode string us" | debconf-set-selections
              echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | debconf-set-selections
              apt update && DEBIAN_FRONTEND=noninteractive apt install -q -y sudo ninja-build git unzip build-essential tree checkinstall coreutils util-linux openjdk-21-jdk
              tree -L 4
      - run:
          name: show system info
          command: |
             uname -a 
             lscpu       
      - run:
          working_directory: DroidMedia
          name: clone required dependencies , glm and jpeg-turbo
          command: |
            chmod +x ./.buildscripts/ensure_third_party_deps.sh
            bash ./.buildscripts/ensure_third_party_deps.sh
      - run:
          working_directory: DroidMedia
          name: Assemble release build
          command: ./gradlew assembleRelease "-Dorg.gradle.jvmargs=-XX:+UseZGC -XX:+ZGenerational -Xmx2g" -Dfile.encoding=UTF-8
      - run:
          working_directory: DroidMedia
          name: show build results
          command: |
            tree -L 4 app/build
      # - save_cache:
      #     working_directory: DroidMedia
      #     key: dt-mobile-app-cache
      #     paths:
      #       - app/build/outputs/apk/release
      # - store_artifacts:
      #     path: DroidMedia/app/build/outputs/apk/release
      #     destination: releaseApk



  vmbuild:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    steps:
      - checkout
      - run:
          name: Install Dependency
          command: |
              sudo apt update && DEBIAN_FRONTEND=noninteractive sudo apt install -y sudo ninja-build git unzip build-essential tree checkinstall coreutils util-linux openjdk-21-jdk
              tree -L 4
              
      - run:
          name: Switch to jdk 21
          command: |
              java -version
              export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
              export PATH=$JAVA_HOME/bin:$PATH
              java -version

      - run:
          name: show system info
          command: |
             uname -a 
             lscpu       
      - run:
          working_directory: DroidMedia
          name: clone required dependencies , glm and jpeg-turbo
          command: |
            chmod +x ./.buildscripts/ensure_third_party_deps.sh
            bash ./.buildscripts/ensure_third_party_deps.sh
      - run:
          working_directory: DroidMedia
          name: Assemble release build
          command: |
              java -version
              export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
              export PATH=$JAVA_HOME/bin:$PATH
              java -version
              ./gradlew assembleRelease "-Dorg.gradle.jvmargs=-XX:+UseZGC -XX:+ZGenerational -Xmx8g" -Dfile.encoding=UTF-8
              
      - run:
          working_directory: DroidMedia
          name: show build results
          command: |
            tree -L 4 app/build
            
workflows:
  version: 2
  build:
      jobs:
        - dockerbuild:
            matrix:
              parameters:
                os: [docker-amd64,docker-aarch64]
            filters:
              branches:
                only:
                  - release
        - vmbuild:
            matrix:
                  parameters:
                    os: [linux-amd64]
            filters:
              branches:
                only:
                  - release 
