plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}
def SUPPORTED_ABI = ['arm64-v8a', 'x86', 'x86_64','armeabi-v7a'] as String[]

android {
    namespace 'com.me.harris.extractframe'
    compileSdk 33

    buildFeatures {
//        buildConfig = true
        viewBinding = true
//        aidl true
    }
    defaultConfig {
        minSdk 27
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

            externalNativeBuild {
                cmake {
                    abiFilters SUPPORTED_ABI //只帮我打这个架构的就好了
                    cppFlags "-g -std=c++11 -frtti -fexceptions"
                    arguments '-DANDROID_PLATFORM=android-21',
                            '-DANDROID_TOOLCHAIN=clang',
                            '-DANDROID_CPP_FEATURES=rtti exceptions'
//                arguments  "-DANDROID_STL=stlport_static"
                    "-DANDROID_ARM_NEON=true"
                }
            }
            ndk {
                abiFilters  SUPPORTED_ABI
            }

            splits {
                abi {
                    enable true
                    reset()
                    include  SUPPORTED_ABI
                    universalApk true
                }
            }

            packagingOptions {
                pickFirst "lib/arm64-v8a/*.so"
            }

    }

        if (SUPPORT_NATIVE_BUILD){
        externalNativeBuild {
            cmake {
                version "3.22.1"
                path "src/main/cpp/CMakeLists.txt"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
            vendor = JvmVendorSpec.ORACLE
            implementation = JvmImplementation.VENDOR_SPECIFIC
        }
    }
}

dependencies {
    implementation libs.androidx.core.core.ktx
    implementation libs.androidx.activity.ktx
    implementation libs.androidx.appcompat.appcompat
    implementation libs.google.android.material.material
    implementation libs.androidx.lifecycle.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.lifecycle.runtime.ktx
    implementation libs.androidx.lifecycle.lifecycle.livedata.ktx
    implementation libs.exoplayer.core
    implementation libs.exoplayer.ui
    implementation libs.coroutines.core
    implementation libs.coroutines.android
    implementation libs.androidx.cardview.cardview
    implementation libs.coil.kt
    implementation  libs.androidx.recyclerview.recyclerview
    testImplementation libs.junit.junit
    androidTestImplementation libs.androidx.test.junit
    androidTestImplementation libs.androidx.test.espresso.espresso.core
    implementation project(":medialibs:yuv")
    implementation project(":awesomelib")


}