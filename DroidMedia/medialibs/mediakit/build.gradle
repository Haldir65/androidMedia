import java.util.function.IntFunction

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}


def SUPPORTED_ABI = ['arm64-v8a', 'x86', 'x86_64','armeabi-v7a'] as String[]

android {
    namespace 'com.jadyn.mediakit'
    compileSdk 33

    defaultConfig {
        minSdk 27
        targetSdk 29

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        if(SUPPORT_NATIVE_BUILD){
            externalNativeBuild {
                cmake {
                    abiFilters SUPPORTED_ABI //只帮我打这个架构的就好了
                    cppFlags "-g -std=c++11 -frtti -fexceptions"
                    arguments '-DANDROID_PLATFORM=android-21',
                            '-DANDROID_TOOLCHAIN=clang',
                            '-DANDROID_CPP_FEATURES=rtti exceptions'
//                arguments  "-DANDROID_STL=stlport_static"
                    "-DANDROID_ARM_NEON=true"
                }
            }
            ndk {
                abiFilters  SUPPORTED_ABI
            }

            splits {
                abi {
                    enable true
                    reset()
                    include  SUPPORTED_ABI
                    universalApk true
                }
            }

//        packagingOptions {
//            pickFirst "lib/arm64-v8a/*.so"
//        }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }



    if (SUPPORT_NATIVE_BUILD){
        externalNativeBuild {
            cmake {
                version "3.22.1"
                path "src/main/cpp/jni/CMakeLists.txt"
            }
        }
    }

}

dependencies {

    implementation libs.androidx.activity.ktx
    implementation libs.androidx.core.core.ktx
    implementation libs.androidx.appcompat.appcompat
    implementation libs.google.android.material.material
    implementation libs.androidx.cardview.cardview

    implementation libs.coroutines.core
    implementation libs.coroutines.android
    implementation libs.androidx.lifecycle.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.lifecycle.runtime.ktx
    implementation libs.androidx.lifecycle.lifecycle.livedata.ktx


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation project(":awesomelib")

    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    // https://mvnrepository.com/artifact/io.reactivex.rxjava3/rxjava
    implementation 'io.reactivex.rxjava3:rxjava:3.1.1'


    // we want to access application context in library module
    implementation libs.google.dagger.hilt.android
    kapt libs.google.dagger.hilt.android.compiler

}