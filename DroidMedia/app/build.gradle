plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
}

def SUPPORTED_ABI = ['arm64-v8a', 'x86', 'x86_64','armeabi-v7a'] as String[]

def SUPPORT_NATIVE_BUILD = false


android {
    compileSdkVersion 33
    namespace "com.me.harris.droidmedia"
    buildToolsVersion '33.0.2'
    ndkVersion '25.1.8937393'

    buildFeatures {
        buildConfig = true
        viewBinding = true
        aidl true
    }

    sourceSets {
//        main {
//            jniLibs.srcDirs = ['src/main/jniLibs']
//        }  、、 External native build now automatically packages those libraries, so explicitly packaging the library with jniLibs results in a duplicate.
//        To avoid the build error, move the prebuilt library to a location outside jniLibs or remove the jniLibs configuration from your build.gradle file.
    }

    defaultConfig {
        applicationId "com.me.harris.droidmedia"
        minSdk 27
        targetSdk 29
        versionCode 1
        versionName "1.0"
        resourceConfigurations += ['zh', 'zh-rCN']


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        if(SUPPORT_NATIVE_BUILD){
            externalNativeBuild {
                cmake {
                    abiFilters SUPPORTED_ABI //只帮我打这个架构的就好了
                    cppFlags "-g -std=c++11 -frtti -fexceptions"
                    arguments '-DANDROID_PLATFORM=android-21',
                            '-DANDROID_TOOLCHAIN=clang',
                            '-DANDROID_CPP_FEATURES=rtti exceptions'
//                arguments  "-DANDROID_STL=stlport_static"
                    "-DANDROID_ARM_NEON=true"
                }
            }
            ndk {
                abiFilters  SUPPORTED_ABI
            }

            splits {
                abi {
                    enable true
                    reset()
                    include  SUPPORTED_ABI
                    universalApk true
                }
            }

            packagingOptions {
                pickFirst "lib/arm64-v8a/*.so"
            }
        }

    }


    //https://stackoverflow.com/a/40276710 每次换机器编译都要重新安装太费事了
    signingConfigs {
        release {
            keyAlias 'keyAlias'
            keyPassword 'keyPassword'
            storePassword 'storePassword'
            storeFile file("${rootDir}/keystores/app.keystore")
        }

        debug {
            storeFile file("${rootDir}/keystores/debug.keystore")
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }




    //DSL element 'dexOptions' is obsolete and should be removed.
    //It will be removed in version 8.0 of the Android Gradle plugin.
//    dexOptions {
//        jumboMode = true
//        javaMaxHeapSize "4g"
//        keepRuntimeAnnotatedClasses false
//        // 优化transformClassDexBuilderForDebug
//        maxProcessCount 12
//        threadCount =  12
//        // https://blog.csdn.net/weixin_45583158/article/details/121368947
//    }

    if (SUPPORT_NATIVE_BUILD){
        externalNativeBuild {
        cmake {
            version "3.22.1"
            path "src/main/cpp/CMakeLists.txt"
        }
        }
    }
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
            vendor = JvmVendorSpec.ORACLE
            implementation = JvmImplementation.VENDOR_SPECIFIC
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lint {
        abortOnError false
        checkReleaseBuilds true
    }

}

dependencies {
    implementation 'androidx.activity:activity-ktx:1.7.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.10.0'
    testImplementation 'junit:junit:4.13.2'
    // App compat and UI things
    implementation 'androidx.appcompat:appcompat:1.6.1'

    // ViewModelScope
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    // LifecycleScope
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    // LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'

    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.8.0'
    // EXIF Interface
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    // okhttp
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp-bom
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
//    implementation group: 'com.jadynai.ai.kotlind', name: 'KotlinD', version: '1.0.5'
    // https://mvnrepository.com/artifact/io.reactivex.rxjava3/rxandroid
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    // https://mvnrepository.com/artifact/io.reactivex.rxjava3/rxjava
    implementation 'io.reactivex.rxjava3:rxjava:3.1.1'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/adapter-rxjava3
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0"

    // https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-bom
    implementation platform('org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.6.4')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    implementation files('somelibs/jetified-exoplayer-core-r2.5.2.aar')
    implementation files('somelibs/jetified-exoplayer-ui-r2.5.2.aar')
    implementation project(":awesomelib")
    implementation project(":medialibs:filterLibrary")
    implementation project(":medialibs:playerLib")
    implementation project(":medialibs:epf")

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"


}
