diff --git a/build.gradle b/build.gradle
index 9d14201..6b57db7 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,12 +1,12 @@
 buildscript {
-    ext.kotlin_version = '1.7.20'
+    ext.kotlin_version = '2.0.0'
 
     repositories {
         google()
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:7.3.1'
+        classpath 'com.android.tools.build:gradle:8.5.0'
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
     }
 }
@@ -22,8 +22,8 @@ allprojects {
 }
 
 ext {
-    minSdkVersion = 18
-    targetSdkVersion = 30
-    compileSdkVersion = 33
-    buildToolsVersion = "33.0.1"
+    minSdkVersion = 27
+    targetSdkVersion = 29
+    compileSdkVersion = 34
+    buildToolsVersion = "34.0.0"
 }
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index c1a8b28..e785199 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
 #Sat Feb 19 05:51:03 UZT 2022
 distributionBase=GRADLE_USER_HOME
-distributionUrl=https\://services.gradle.org/distributions/gradle-7.4.2-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-8.8-all.zip
 distributionPath=wrapper/dists
 zipStorePath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
diff --git a/litr-demo/build.gradle b/litr-demo/build.gradle
index 713d721..465cefa 100644
--- a/litr-demo/build.gradle
+++ b/litr-demo/build.gradle
@@ -19,8 +19,8 @@ android {
     }
 
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
+        sourceCompatibility JavaVersion.VERSION_21
+        targetCompatibility JavaVersion.VERSION_21
     }
 
     lint {
@@ -46,14 +46,14 @@ dependencies {
     // uncomment to experiment with ffmpeg
     // implementation project(':litr-ffmpeg')
 
-    implementation 'androidx.appcompat:appcompat:1.2.0'
-    implementation 'androidx.recyclerview:recyclerview:1.2.0'
+    implementation 'androidx.appcompat:appcompat:1.7.0'
+    implementation 'androidx.recyclerview:recyclerview:1.3.2'
     implementation 'androidx.multidex:multidex:2.0.1'
-    implementation 'com.github.bumptech.glide:glide:4.14.2'
-    implementation 'com.google.android.exoplayer:exoplayer-core:2.13.3'
-    implementation 'com.google.android.exoplayer:exoplayer-ui:2.13.3'
-    implementation 'com.google.android.material:material:1.3.0'
-    implementation 'androidx.core:core-ktx:1.3.2'
+    implementation 'com.github.bumptech.glide:glide:4.16.0'
+    implementation 'com.google.android.exoplayer:exoplayer-core:2.19.1'
+    implementation 'com.google.android.exoplayer:exoplayer-ui:2.19.1'
+    implementation 'com.google.android.material:material:1.12.0'
+    implementation 'androidx.core:core-ktx:1.13.1'
     implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
 
     kapt 'com.github.bumptech.glide:compiler:4.14.2'
diff --git a/litr-demo/src/main/java/com/linkedin/android/litr/demo/MainActivity.java b/litr-demo/src/main/java/com/linkedin/android/litr/demo/MainActivity.java
index 5f4ff1e..59b5752 100644
--- a/litr-demo/src/main/java/com/linkedin/android/litr/demo/MainActivity.java
+++ b/litr-demo/src/main/java/com/linkedin/android/litr/demo/MainActivity.java
@@ -73,24 +73,19 @@ public class MainActivity extends AppCompatActivity {
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         Intent intent = new Intent(this, InfoActivity.class);
-        switch (item.getItemId()) {
-            case R.id.device_info:
-                intent.setAction(InfoActivity.ACTION_DISPLAY_DEVICE_INFO);
-                break;
-            case R.id.capture_formats:
-                intent.setAction(InfoActivity.ACTION_DISPLAY_CAPTURE_FORMATS);
-                break;
-            case R.id.codec_list:
-                intent.setAction(InfoActivity.ACTION_DISPLAY_CODEC_LIST);
-                break;
-            case R.id.avc_encoders:
-                intent.setAction(InfoActivity.ACTION_DISPLAY_AVC_ENCODERS);
-                break;
-            case R.id.avc_decoders:
-                intent.setAction(InfoActivity.ACTION_DISPLAY_AVC_DECODERS);
-                break;
-            default:
-                return super.onOptionsItemSelected(item);
+        int itemId = item.getItemId();
+        if (itemId == R.id.device_info) {
+            intent.setAction(InfoActivity.ACTION_DISPLAY_DEVICE_INFO);
+        } else if (itemId == R.id.capture_formats) {
+            intent.setAction(InfoActivity.ACTION_DISPLAY_CAPTURE_FORMATS);
+        } else if (itemId == R.id.codec_list) {
+            intent.setAction(InfoActivity.ACTION_DISPLAY_CODEC_LIST);
+        } else if (itemId == R.id.avc_encoders) {
+            intent.setAction(InfoActivity.ACTION_DISPLAY_AVC_ENCODERS);
+        } else if (itemId == R.id.avc_decoders) {
+            intent.setAction(InfoActivity.ACTION_DISPLAY_AVC_DECODERS);
+        } else {
+            return super.onOptionsItemSelected(item);
         }
         startActivity(intent);
 
diff --git a/litr-demo/src/main/java/com/linkedin/android/litr/demo/fragment/VideoFilterPreviewFragment.java b/litr-demo/src/main/java/com/linkedin/android/litr/demo/fragment/VideoFilterPreviewFragment.java
index c7f0b9b..e3ff585 100644
--- a/litr-demo/src/main/java/com/linkedin/android/litr/demo/fragment/VideoFilterPreviewFragment.java
+++ b/litr-demo/src/main/java/com/linkedin/android/litr/demo/fragment/VideoFilterPreviewFragment.java
@@ -21,12 +21,15 @@ import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 
 import com.google.android.exoplayer2.ExoPlayer;
+import com.google.android.exoplayer2.MediaItem;
 import com.google.android.exoplayer2.SimpleExoPlayer;
 import com.google.android.exoplayer2.source.ProgressiveMediaSource;
 import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
 import com.google.android.exoplayer2.upstream.DataSource;
 import com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;
-import com.google.android.exoplayer2.video.VideoListener;
+import com.google.android.exoplayer2.Player.Listener;
+import com.google.android.exoplayer2.video.VideoRendererEventListener;
+import com.google.android.exoplayer2.video.VideoSize;
 import com.linkedin.android.litr.demo.BaseTransformationFragment;
 import com.linkedin.android.litr.demo.MediaPickerListener;
 import com.linkedin.android.litr.demo.data.SourceMedia;
@@ -45,13 +48,23 @@ public class VideoFilterPreviewFragment extends BaseTransformationFragment imple
 
     private VideoPreviewRenderer renderer;
 
-    private VideoListener videoListener = new VideoListener() {
+    private Listener videoListener = new Listener() {
+
         @Override
-        public void onVideoSizeChanged(int width, int height, int unappliedRotationDegrees, float pixelWidthHeightRatio) {
+        public void onVideoSizeChanged(VideoSize videoSize) {
             if (binding != null) {
+                int width = videoSize.width;
+                int height = videoSize.height;
                 binding.videoFrame.setAspectRatio((float) width / height);
             }
         }
+
+//        @Override
+//        public void onVideoSizeChanged(int width, int height, int unappliedRotationDegrees, float pixelWidthHeightRatio) {
+//            if (binding != null) {
+//                binding.videoFrame.setAspectRatio((float) width / height);
+//            }
+//        }
     };
 
     @Override
@@ -67,7 +80,7 @@ public class VideoFilterPreviewFragment extends BaseTransformationFragment imple
         exoPlayer = new SimpleExoPlayer.Builder(context)
                 .setTrackSelector(trackSelector)
                 .build();
-        exoPlayer.setThrowsWhenUsingWrongThread(false);
+//        exoPlayer.setThrowsWhenUsingWrongThread(false);
         renderer = new VideoPreviewRenderer(surfaceTexture -> exoPlayer.setVideoSurface(new Surface(surfaceTexture)));
     }
 
@@ -94,7 +107,7 @@ public class VideoFilterPreviewFragment extends BaseTransformationFragment imple
 
         exoPlayer.setVideoSurfaceView(binding.videoPreview);
         exoPlayer.setRepeatMode(ExoPlayer.REPEAT_MODE_ALL);
-        exoPlayer.addVideoListener(videoListener);
+        exoPlayer.addListener(videoListener);
 
         binding.videoPreview.setRenderer(renderer);
 
@@ -117,7 +130,7 @@ public class VideoFilterPreviewFragment extends BaseTransformationFragment imple
     public void onDetach() {
         super.onDetach();
 
-        exoPlayer.removeVideoListener(videoListener);
+        exoPlayer.removeListener(videoListener);
         renderer.release();
         exoPlayer.release();
     }
@@ -127,7 +140,7 @@ public class VideoFilterPreviewFragment extends BaseTransformationFragment imple
         SourceMedia sourceMedia = binding.getSourceMedia();
         updateSourceMedia(sourceMedia, uri);
 
-        ProgressiveMediaSource mediaSource = new ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(uri);
+        ProgressiveMediaSource mediaSource = new ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(MediaItem.fromUri(uri));
         exoPlayer.prepare(mediaSource);
         exoPlayer.setPlayWhenReady(true);
     }
diff --git a/litr-ffmpeg/build.gradle b/litr-ffmpeg/build.gradle
index 6ece76b..e93d0b1 100644
--- a/litr-ffmpeg/build.gradle
+++ b/litr-ffmpeg/build.gradle
@@ -14,9 +14,12 @@ android {
         targetSdkVersion rootProject.ext.targetSdkVersion
     }
 
+    ndkVersion '26.3.11579264'
+
+
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
+        sourceCompatibility JavaVersion.VERSION_21
+        targetCompatibility JavaVersion.VERSION_21
     }
 
     kotlinOptions {
@@ -26,7 +29,7 @@ android {
     externalNativeBuild {
         cmake {
             path file('src/main/cpp/CMakeLists.txt')
-            version '3.18.1'
+            version '3.22.1'
         }
     }
 }
diff --git a/litr-filters/build.gradle b/litr-filters/build.gradle
index 57515b0..73e3cdc 100644
--- a/litr-filters/build.gradle
+++ b/litr-filters/build.gradle
@@ -8,8 +8,8 @@ apply from: "$rootDir/gradle/publishing.gradle"
 description 'Video/Audio filter pack for LiTr'
 
 android {
-    compileSdkVersion 31
-    buildToolsVersion '31.0.0'
+    compileSdkVersion 34
+    buildToolsVersion '34.0.0'
 
     namespace 'com.linkedin.android.litr.filter'
 
@@ -22,8 +22,8 @@ android {
     }
 
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
+        sourceCompatibility JavaVersion.VERSION_21
+        targetCompatibility JavaVersion.VERSION_21
     }
 
     buildTypes {
@@ -37,7 +37,7 @@ android {
 dependencies {
     implementation project(':litr')
 
-    implementation 'androidx.annotation:annotation:1.2.0'
-    implementation 'androidx.core:core-ktx:1.7.0'
+    implementation 'androidx.annotation:annotation:1.8.0'
+    implementation 'androidx.core:core-ktx:1.13.1'
     implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
 }
diff --git a/litr/build.gradle b/litr/build.gradle
index 5676ef1..1e6ad42 100644
--- a/litr/build.gradle
+++ b/litr/build.gradle
@@ -8,8 +8,10 @@ apply from: "$rootDir/gradle/publishing.gradle"
 description 'LiTr media transformation library for Android'
 
 android {
-    compileSdkVersion 31
-    buildToolsVersion '31.0.0'
+    compileSdkVersion 34
+    buildToolsVersion '34.0.0'
+    ndkVersion '26.3.11579264'
+
 
     namespace 'com.linkedin.android.litr'
 
@@ -19,10 +21,16 @@ android {
     }
 
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
+        sourceCompatibility JavaVersion.VERSION_21
+        targetCompatibility JavaVersion.VERSION_21
+    }
+
+
+    kotlinOptions {
+        jvmTarget = JavaVersion.VERSION_21
     }
 
+
     testOptions {
         unitTests.returnDefaultValues = true
     }
@@ -41,14 +49,14 @@ android {
     externalNativeBuild {
         cmake {
             path file('src/main/cpp/CMakeLists.txt')
-            version '3.10.2'
+            version '3.22.1'
         }
     }
 }
 
 dependencies {
-    implementation 'androidx.annotation:annotation:1.2.0'
-    implementation 'androidx.core:core-ktx:1.7.0'
+    implementation 'androidx.annotation:annotation:1.8.0'
+    implementation 'androidx.core:core-ktx:1.13.1'
     implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
 
     testImplementation 'junit:junit:4.13.2'
diff --git a/litr/src/main/java/com/linkedin/android/litr/render/GlSingleFrameRenderer.kt b/litr/src/main/java/com/linkedin/android/litr/render/GlSingleFrameRenderer.kt
index dddd1a6..e8538db 100644
--- a/litr/src/main/java/com/linkedin/android/litr/render/GlSingleFrameRenderer.kt
+++ b/litr/src/main/java/com/linkedin/android/litr/render/GlSingleFrameRenderer.kt
@@ -59,7 +59,7 @@ class GlSingleFrameRenderer(filters: List<GlFilter>?) : SingleFrameRenderer {
         pixelBuffer?.rewind()
         GLES20.glReadPixels(0, 0, width, height, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_BYTE, pixelBuffer)
         val destBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)
-        destBitmap.copyPixelsFromBuffer(pixelBuffer)
+        destBitmap.copyPixelsFromBuffer(pixelBuffer!!)
         return destBitmap
     }
 
